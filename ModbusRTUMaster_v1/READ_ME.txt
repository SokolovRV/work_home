>>> Сопроводительная информация для модуля Modbus.
>>> Разработчик: Соколов Р.В.
>>> Версия: 1.0
>>> Дата: 04.02.2019

Следующий текст не является документом или инструкцией, поэтому написан в свободной форме.

Данный модуль(блок) реализует протокол Modbus Master для ПЛИС в формате двух функций: запись несколько аналоговых (holding reg) выводов 0x10;
										чтение несколько аналоговых (holding reg) выводов 0x03.

В корне содержится две папки: ModbusRTUMaster_SingleSlave - если slave устройство одно,
			      ModbusRTUMaster_MultiSlave  - если slave устройств несколько,
	- каждая из которых содержит освновной блок с расширением .bdf (Block Diagram File) 
		и относящихся к нему файлов с расширением .v (Verylog).

Принципиальное отличие SingleSlave и Multislave блоков будет рассмотрено позже.

Следующая информация является общей для всех блоков.

>>> Описание входных и выходных портов основного блока (Modbus_RTU_Master_v1.bdf):
	Входы:
		- 'clk' - основной источник тактирования блока (ограничение частот будет представлено ниже));
		- 'RX' - линия приема данных (receive data);
		- 'reset' - сброс блока;
		- 'data_x1_x2' - порты входных данных, где x1 - номер регистра slave устройства,
								куда будут записаны данные;
							   x2 - адрес slave устройства.

	Выходы:
		- 'TX' - линия передачи данных (transmit data);
		- 'DE' - переключатель драйвера ADM (выбор направления передачи);
		- 'connection' - индикатор наличия соединения;
		- 'data_x1_x2' - порты выходных данных, где x1 - номер регистра slave устройства,
								 откуда считаны данные;
							    x2 - адрес slave устройства.
		- 'error_code' - код ошибки обмена данными (расшифровка ошибок будет приведена ниже);
		- 'error_cnt' - количество ошибок обмена данными.

>>> Добавление блока в проект.
	- Для добавления блока необходимо скопировать папку с файлами в директорию с проектом и добавить все файлы в проект
	с помощью вкладки в Quartus: Project --> Add/Remove Files in Project.
	- Далее необходимо открыть файл основного модуля: "Modbus_RTU_Master_v1.bdf" и создать символ блока: File --> Create/Update --> Create Symbol File from current file.

>>> Особенности подключения.
	После добавление созданного блока необходимо подключить 'RX' , 'TX', 'DE' - к соотвествующим пинам, а так же настоятельно рекомендуется подтянуть 'reset' к 'gnd',
	так как при компиляции с различными настройками проекта без соединения этот вход может принять высокий уровень сигнала, что будет соответсвовать сбросу блока (модуль работать не будет).
	На порт 'clk' следует подключать частоту, значение которой выбрано в параметрах внутри блока. О настройке параметров работы блока Modbus будет сказано в следующих пунктах.

>>> НАСТРОЙКА ПАРАМЕТРОВ <<<
	!!! Примечание !!!
		В зависимости от версии квартуса и его конфигурации - параметры модулей могут либо не отображаться, либо отображаться в двоичном формате. Следует обратить на это внимание.
		Для того, чтобы параметры модулей отображались - в квартусе необходимо поставить галочку 'Viev' --> 'Show Parameter Assignments'. В случае, если параметр отображается в двоичном формате,
		необходимо зайти в меню параметра модуля (кликнув 2 раза по нему) и выбрать формат у каждого параметра 'Unsigned Integer' - и далее уже вводить требуемые величины.

	>>> Настройка основной тактирующей частоты (clk).
		Необходимо изменить параметр 'clk_freq_MHz'в четырех следующих модулях:
			- 'uart_tx_state_machine'
			- 'uart_rx_state_machine'
			- 'modbus_rtu_tx_control'
			- 'modbus_rtu_rx_control'
		В параметр записывается значение требуемой частоты в МЕГАГЕРЦАХ в рекомендуемом диапазоне: >> 5Mhz - 100 MHz <<. 

	>>> Настройка скорости передачи данных.
		Необходимо изменить параметр 'baudrate' в двух блоках:
			- 'uart_tx_state_machine'
			- 'uart_rx_state_machine'
		В параметр записывается значение требуемой скорости в бодах (baud).
		!! Передача данных осуществляется в режиме 8 бит с 1 стоповым битом. !!

	>>> Настройка задержек (пауз).
		За задержки при обмене данными между Master и Slave следующие параметры:
			- Параметр 'delay_us' модуля 'modbus_rtu_tx_control' определяет время между окончанием приема данных от slave устройства и началом отправки новых данных от master.
				Параметр записывается в микросекундах (us) в рекомендуемом диапазоне: 1000 us - 200 000 us (от 1 до 200 миллисекунд). Увеличивать данный параметр стоит только
				при необходимости, так как при его увеличении за единицу времени передается меньшее число пакетов.
			- Параметр 'timeout_us' модуля 'modbus_rtu_rx_control' определяет максимальное время ожидания ответа от slave устройства, после отправки запроса от master.
				Параметр записывается в микросекундах (us) в рекомендуемом диапазоне: 10 000 us - 200 000 us (от 10 до 200 миллисекунд).

	

	>>> Настройка протокола обмена данными.
		Настройка протокола осуществляется через параметры модулей 'data_mux' и 'data_demux'.
		Описание параметров модуля 'data_mux':
			- 'slave_adr' - адрес slave устройства, с которым будет осуществляться обмен данными, диапазон >> 1 - 255 << !! 0 адрес недопустим !!;
			- 'adr_first_reg_write' - номер (адрес) первого регистра в slave устройстве, в который будет осуществлена запись данных;
			- 'num_reg_write' - количество регистров, которые будут записаны в slave устройство, диапазон >> 1 - 127 << (например: необходимо осуществлять запись в 3 регистра с
									адресами: 300, 301, 302 - тогда в параметр 'adr_first_reg_write' следует записать значение 300, а в 'num_reg_write' = 3 ).
			- 'adr_first_reg_read' - номер (адрес) первого регистра в slave устройстве, с которого будет осуществленно чтение данных;
			- 'num_reg_write_read' - количество регистров, которое будет считано со slave устройства, диапазон >> 1 - 127 << (адреса считываемых регистров формируются аналогично примеру, приведенному выше). 
		Описание параметров модуля 'data_demux':
			- 'slave_id' - адрес slave устройства, с которого считываются данные (должен быть равен параметру модуля 'data_mux' - 'slave_adr')
			- 'number_of_reg' - количество регистров, считываемых со slave устройства (должен быть равен параметру модуля 'data_mux' - 'num_reg_write_read').

	

	>>> Настройка цифрового фильтра.
		Цифровой фильтр представлен модулем 'digital_filtr' с параметром 'clk_cnt'. Данный модуль помогает избежать ошибок при переходных процессах, 
		связянных с переключением драйвера или помехи на линии. По умолчанию в параметре стоит значение 20. Его изменение в меньшую сторону может понадобиться только в случае одновременной установки
		низкой основной тактирующей частоты (например 5 MHz) и высокой скорости передачи данных ( свыше 200 000 baud), однако не рекомендуется установка значения ниже 5.
		'clk_cnt' - это количество базовых клоков 'clk', в течении которого входной сигнал 'RX' должен оставаться без изменения после очередного фронта, иначе модуль просто не пропустит сигнал и обмена данными не будет.
		Без надобности менять данный параметр не рекомендуется.

	
 	>>> Настройка количества портов ввода/вывода.
		Добавление портов ввода/вывода осуществляется путем редактирования модулей 'data_mux' 'data_demux' по аналогичному синтаксису и признаку.
		Добавляются конструкции входов (input) и выходов (output), а так же дополнительные случаи в конструкции у обоих модулей'case'. Имена индексируются в зависимости от номера регистра и адреса устройства аналогично оригинальным блокам.
		Количество входов (input) должно быть равным параметру 'num_reg_write', а выходов (output в модуле 'data_demux') - 'num_reg_write_read' соотвественно.

		Для удобства была разработанна программа, которая генерирует данные модули. Ее описание будет представленно ниже.

 
>>> ОТЛИЧИЯ SingleSlave и Multislave блоков, а так же изменение количества slave устройств<<<
	Основной модуль Modbus, предназначенный для работы с несколько slave устройствами (Multislave) отличается от SingleSlave только наличием дополнительно модуля 'slave_select'.
	Вся остальная информация, приведенная выше, является справедливой для ModbusRTUMaster_SingleSlave и ModbusRTUMaster_MultiSlave.	
	Данный модуль переключает шесть линий данных с одного модуля 'data_mux' на другой и представлет собой мультиплексор. Переключение происходит по событию переднего фронта сигнала 'tx_done'.
	Модуль имеет свой параметр: 'number_of_slaves' - который выбирается в зависимости от количество slave устройств.
	Для изменения количества slave устройств на линии помимо изменения параметра 'number_of_slaves', необходимо изменить количество входов (input) модуля и количество случаев в констукции 'case' аналогично оригинальному блоку.
	Входы модуля индексируются согласно адресу. Настройка модулей ввода/вывода уже была рассмотрена выше.
	При каждом новом добавлении slave устройства, помимо редактирования модуля 'slave_select', необходимо добавлять новую пару блоков 'data_mux' и 'data_demux', которые будут отвечать за свое slave устройство и иметь свои настройки протокола.
	Например, в папке ModbusRTUMaster_MultiSlave сконфигурирован Modbus с двумя slave устройствами по 10 входов и выходов у каждого.
	
	Модуль 'slave_select' так же можно сгенерировать с помощью программы, о которой дальше пойдет речь.

>>> Программа 'Modbus_ports_modules_generator' находится в той же папке, что и даннный текстовый файл.
	Она позволяет генерировать модули: 'data_mux' 'data_demux' 'slave_select' - c нужными параметрами, включая настройку протокола.
	При вызове программы необходимо выбрать один из двух пунктов.
		Первый пункт позволит снегерировать модули 'data_mux' 'data_demux' с необходимым количеством входов/выходов и настройками протокола.
		Второй пункт позволит снегерировать модуль 'slave_select' с необходимым количеством входов и отдельным назначением адреса на каждую группу входов.
	Программа позволяет добавлять префикс к каждому из генерируемых модулей. Это помогает избежать конфликтов компилятора при одинаковых названиях модулей и файлов, а так же делает название более информативным.
	Так же это позволит хранить в проекте несколько модулей с разной конфигурацией.
	Настоятельно рекомендуется записывать в префикс помимо версии файла: адрес и количество входов, если это модули ввода/вывода или  количество slave устройств, если это модуль выбора ведомого устройства.
	При вводе префикса допускаются только латинские символы, цифры и знак нижнего подчеркивания ('_'). Префикс добавляется в конце стандартного наименования файла и модуля, как показано в программе.
	Во всех остальных пунктах вводятся только целочисленные значения.
	Все файлы будут сгенерированы в той папке, где находится программа.

	!!! Если в корневой папке, где находится программа уже есть файл с таким же префиксом, который введен в текущей сессии программы, то файл перезапишется !!!

	Пару сценариев использования программы:
		- Если есть только одно slave устройство, а стандартные модули на 30 входов и выходов избыточны, и вообще необходимо поменять адреса регистров.
			Тогда необходимо запустить программу, выбрать первый пункт, ввести требуемые настройки протокола, а так же уникальный префикс для 
			названия файлов и модулей (чтобы название файлов отличалось от тех, что уже есть в проекте, например блоки на 15 слов, котороые относятся к slave с адресом 3: data_mux_3_15 и т.п.).
			Далее файлы добавляются (скопировать файлы в папку с модбасом, которая находится в вашем проекте, а затем Add/Remove Files in Project) в проект и создаются символы модулей, которые потом добавляются вместо тех, что были изначально (на 30 слов).
		- Если необходимо сконфигурировать Modbus для нескольких slave устройств - необходимо снегерировать модуль выбора slave устройства, выбрав второй пункт в начале программы.
			Затем необходимо еще запустить программу N раз, выбрав первый пункт, чтобы сгенерировать модули ввода/вывода (data_mux/data_demux), чтобы на каждое slave устройство имело свою пару модулей ввода вывода со своими настройками.
			Не забываем при каждом запуске менять префикс, иначе файл перезапишется.
			Все файлы добавить в проект, создать для модулей символы, добавить на схематик и соединить аналогично оригиналу.

>>> Обработка ошибок.
	Код ошибки содержит выходной порт основного модуля 'error_code'.
		Биты:
			[3:0] - ошибки на физическом уровне передачи данных
				0001 - slave  не отвечает (ошибка timeout)
				0010 - нарушен timeout между байтами
				0100 - ошибка контрольной суммы (crc)
			[7:4] - ошибки протокола, их описание можно найти в специафикации Modbus RTU
			[15:8] - адрес slave устройства, которое вернуло код ошибки
	Каждая новая ошибка перезаписывает код ошибки. Если обмен данных завершен успешно, код ошибки сбрасывается в нулевое состояние (16'h0000).
	Поэтому, если необходима регистрация ошибок, то значение 'error_code' нужно фиксировать (сохранять) при событии увеличения счетчика ошибок - 'error_cnt'.
	Счетчик ошибок сбрасывается только с помощью основного 'reset'.
				 


	

	

	